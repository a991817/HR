<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgut.shr.mapper.EmployeeMapper">

    <insert id="addEmployee">
        <!--姓名，身份证，性别，手机号，邮箱，生日，籍贯，在职状态，婚姻状态，部门，职位-->
        insert into
        tb_employee(name,id_number,gender,birthday,email,phone,wedlock,native_place,department_id,position_id,begin_date,basic_salary)
        VALUES(#{name},#{idNumber},#{gender},#{birthday},#{email},
        #{phone},#{wedlock},#{nativePlace},#{departmentId},#{positionId},NOW(),#{basicSalary})
    </insert>

    <update id="updateEmployee">
        update tb_employee
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="idNumber != null and idNumber != ''">
                id_number = #{idNumber},
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="wedlock != null and wedlock != ''">
                wedlock = #{wedlock},
            </if>
            <if test="departmentId != null and departmentId != ''">
                department_id = #{departmentId},
            </if>
            <if test="positionId != null and positionId != ''">
                position_id = #{positionId},
            </if>
            <if test="workState != null">
                work_state = #{workState},
            </if>
            <if test="basicSalary != null">
                basic_salary = #{basicSalary},
            </if>
        </set>
        where id = #{id}
    </update>
    <select id="isAdmin" resultType="java.lang.String">
        select name
        from tb_employee
        where position_id = 2 and email=#{email} and password=#{password}

    </select>
    <delete id="deleteEmployee">
        delete from tb_employee
        where id = #{id}
    </delete>

    <delete id="deleteEmployeeMany" parameterType="java.lang.String">
        delete from tb_employee
        where 1=1
        and id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="findUserByNameAndPwd" resultType="com.dgut.shr.dto.EmployeeDto">
        SELECT * FROM tb_employee WHERE email=#{username} and password=#{password}
    </select>

    <select id="countAllEmployee" resultType="java.lang.Integer">
        SELECT COUNT(1) from tb_employee
        <where>
            1=1
            <if test="workState != null">
                and work_state = #{workState}
            </if>
        </where>
    </select>


    <select id="selectList" resultType="com.dgut.shr.dto.EmployeeDto">
        -- 姓名 性别 手机号 邮箱 职位 部门 入职日期 状态
        select e.name,e.id,e.id_number,e.gender,e.phone,e.email,e.birthday,p.position_name,d.dep_name,
        e.begin_date,e.work_state,e.tiptop_degree,e.school,e.basic_salary
        from tb_employee e ,tb_department d ,tb_position p
        <where>
            e.department_id = d.id and e.position_id = p.id
            <if test="name != null and name !=''">
                and e.name like concat('%',#{name},'%')
            </if>
            <if test="positionName != null and positionName !=''">
                and p.position_name like concat('%',#{positionName},'%')
            </if>
            <if test="depName != null and depName !=''">
                and d.dep_name like concat('%',#{depName},'%')
            </if>
            <if test="departmentId != null and departmentId !=''">
                and d.id = #{departmentId}
            </if>
        </where>
    </select>

    <select id="getEmployeeBy" resultType="com.dgut.shr.dto.EmployeeDto">
        select e.name,e.id,e.id_number,e.gender,e.phone,e.email,e.birthday,p.position_name,d.dep_name,
        e.begin_date,e.work_state,e.tiptop_degree,e.school,e.wedlock,e.basic_salary,p.id as positionId,d.id as
        departmentId,
        e.native_place
        from tb_employee e ,tb_department d ,tb_position p
        <where>
            e.department_id = d.id and e.position_id = p.id
            <if test="idNumber != null and idNumber != ''">
                and id_number = #{idNumber}
            </if>
            <if test="id != null and id != ''">
                and e.id = #{id}
            </if>
        </where>
    </select>
    <select id="selectEmpIdList" resultType="com.dgut.shr.dto.EmployeeDto">
        select id from tb_employee
        <where>
            <if test="departmentId != null and departmentId != ''">
                and department_id = #{departmentId}
            </if>
        </where>
    </select>
    <select id="getLeaderBy" resultType="com.dgut.shr.dto.EmployeeDto">
        select e.id,e.name,e.phone,e.email,d.id,d.dep_name,p.id,p.position_name from tb_employee e,tb_department d,tb_position p
        where e.id = d.leader_id and e.position_id = p.id and d.id = #{departmentId}
    </select>
</mapper>